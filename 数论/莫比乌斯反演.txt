#include<cstdio>
#include<cmath>
#include<cstring>
#include<queue>
#include<vector>
#include<map>
#include<functional>
#include<algorithm>

using namespace std;
typedef long long LL;
typedef pair<int, int> PII;

const int MX = 3000 + 5;
const int INF = 0x3f3f3f3f;
const int mod = 10009;

LL power(LL a, LL b) {
    LL ret = 1;
    while(b) {
        if(b & 1) ret = ret * a % mod;
        a = a * a % mod;
        b >>= 1;
    }
    return ret;
}

map<int, int>miu(int n) {
    map<int, int>res;
    vector<int>primes;

    for(int i = 2; i * i <= n; i++) {
        if(n % i == 0) {
            primes.push_back(i);
            while(n % i == 0) n /= i;
        }
    }
    if(n != 1) primes.push_back(n);

    int m = primes.size();
    for(int i = 0; i < (1 << m); i++) {
        int ans = 1, d = 1;
        for(int j = 0; j < m; j++) {
            if(i >> j & 1) {
                ans *= -1;
                d *= primes[j];
            }
        }
        res[d] = ans;
    }
    return res;
}

void solve(int n) {
    int res = 0;
    map<int, int>mu = miu(n);
    for(map<int, int>::iterator it = mu.begin(); it != mu.end(); it++) {
        res += it->second * power(26, n / it->first);
        res = (res % mod + mod) % mod;
    }
    printf("%d\n", res);
}


int main() {
    int n;
    while(~scanf("%d", &n)) {
        solve(n);
    }
    return 0;
}
