/*复杂度O(60*2*2)
可以求出t1属于[1,a],t2属于[1,b]
t1^t2=x的(t1,t2)的点对数
*/
const int MX = 1e2;
LL dp[MX][2][2];
int na[MX], nb[MX], nx[MX];

LL S(LL a, LL b, LL x) {
    memset(dp, 0, sizeof(dp));
    for(int i = 63; i >= 0; i--) {
        na[i] = a >> i & 1;
        nb[i] = b >> i & 1;
        nx[i] = x >> i & 1;
    }

    dp[63][1][1] = 1;
    for(int i = 62; i >= 0; i--) {
        if(na[i] ^ nb[i] == nx[i]) {
            dp[i][1][1] += dp[i + 1][1][1];
        }

        dp[i][1][0] += dp[i + 1][1][0];
        if(nb[i] && na[i] == nx[i]) dp[i][1][0] += dp[i + 1][1][1];

        dp[i][0][1] += dp[i + 1][0][1];
        if(na[i] && nb[i] == nx[i]) dp[i][0][1] += dp[i + 1][1][1];

        dp[i][0][0] += dp[i + 1][0][0] * 2;
        if(na[i]) dp[i][0][0] += dp[i + 1][1][0];
        if(nb[i]) dp[i][0][0] += dp[i + 1][0][1];
        if(na[i] && nb[i] && !nx[i]) dp[i][0][0] += dp[i + 1][1][1];
    }
    return dp[0][0][0] + dp[0][0][1] + dp[0][1][0] + dp[0][1][1];
}
